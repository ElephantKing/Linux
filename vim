vim常用命令：
+++--------------------------------------------------+++
				        光标移动
+++--------------------------------------------------+++
1.在编辑界面中显示行号：set number
2.在编辑界面中取消行号：set nonumber

3.上下左右移动，用上下左右箭头移动一个单位就不说了，移动多个单位在前面加上数字就行了，如向下移动20行:20下(或20j)
n<space>:向右移动n个单位
n<Enter>:向下移动n个单位

4.Ctrl + f:屏幕向下移动一页，相当于page down
5.Ctrl + b:屏幕向上移动一页，相当于page up
6.Ctrl + d:向下移动半页
7.Ctrl + u:向下移动半页
8.Ctrl + e:向下移动一行
9.Ctrl + y:向上移动一行

^或0或者Home：移动到该行的最前面
$或者End：移动到该行的最后面

H移动到屏幕最上面一行的开头(head)
M移动到屏幕最中间一行的开头(middle)
L移动到屏幕最后面一行的开头(last)
G移动到该文档的最后一行
nG移动到该文档的第n行
gg移动到该文档的第一行
+++--------------------------------------------------+++
				删除、复制、粘贴、撤销
+++--------------------------------------------------+++
在命令模式下按back space执行的是左移功能，不能删除字符，用del才能删除
x,X 相当于del的功能
nx 从光标位置开始，往后删除n个字符，不够则全删，不会删除到下一行
nX 从光标位置开始，往前删除n个字符

dd  删除光标所在行
ndd 向下删除n行
d1G 删除光标所在行到第一行的所有数据
dG  删除光标所在行到最后一行的数据
d$  删除所在行光标到行末的字符
d0  删除所在行光标到行首的字符
:n1,n2 d 将n1到n2之间的行全删除
:n1,n2 w filename 将n1到n2之间的行写到文件filename中

yy 赋值光标所在行
nyy向下复制n行
y1G复制光标所在行到最后一行的数据
yG 复制光标所在行到最后一行的数据
y$ 复制所在行光标到最后一个字符
y0 复制所在行光标到行首的字符
:n1,n2 co n3将n1行到n2行之间的数据拷贝到n3行下
:n1,n2 m n3将n1行到n2行之间的数据移动到n3行下
p,P将复制的东西粘贴到上一行或下一行

J将光标所在行和下一行合并,会在本行末插入一个空格后，在把下一行的内容加到最后
u撤销，可以连续撤销
Ctrl + r撤销的撤销
+++--------------------------------------------------+++
				区块选择，查找，替换
+++--------------------------------------------------+++
v字符选择，相当于windows中的shift + 方向
V行选择，相当于windows中的shift + 上下方向
Ctrl + v用矩形区域选择，用于某些标准对齐的选择
以上被选中的区域都会反白显示
y将上面反白的地方复制
d将上面反白的地方删除

/string 向光标下方找string字符，区分大小写
?string 向光标上方找string字符，区分大小写
以上两条都可以配合n，N查找下一条，但是方向却不一样，在用/string时由于是从上往下找，那么用n的时候，也会往下找，用N的时候会往上找，在用?string的时候，由于是从下往上早，那么用n的时候会从下往上找，用N的时候会从上往下找，/string and ?string只是确定搜索方向，n,N是在这个放下下的下一个

:n1,n2s/string1/string2/g   在行号n1,n2之间包括n1,n2,将字符串sting1替换为string2

:n2,n2s/string1/string2/gc  在行号n1,n2之间包括n1,n2,将字符串sting1替换为string2，在每次替换前都要用户从键盘输入确认，可以选择如下选项:y/n/a/q/l/^E/^Y,其中y为替换当前这个字符，n是跳过当前这个，a所有字符全都替换，且在该字符之前的字符不会被替换，如在这个字符之前，有三个相同的字符串，被你用命令n跳过之后，再用a命令，前面三个不会被替换，q退出本次替换操作，l替换当前这个后退出，^E,^Y是组合键(Ctrl + E or Y)，用于滚动屏幕的
+++--------------------------------------------------+++
					保存、退出
+++--------------------------------------------------+++
:w 写入
:w! 强行写入，能否成功和权限有关
:q 离开
:q! 强行离开，不保存
:wq 保存后离开
:wq! 强制保存离开，能否成功和权限有关
:w [filename] 另存为,实际命令中没有[]filename可以是绝对路径和相对路径
:r [filename]将filename中的内容读取到光标所在行下一行
+++--------------------------------------------------+++
						其他
+++--------------------------------------------------+++
1.修改tab键所占空格数，在vim目录下找到vimrc文件，在文件末尾加上两句话
set ts=2
set expandtab
