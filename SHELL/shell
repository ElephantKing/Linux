++++++++---------------常用环境变量-----------------+++++++
++++++++---------------常用环境变量-----------------+++++++
HOSTNAME:主机名
SHELL:当前shell
TERM:终端环境
HISTSIZE:能保存的历史命令最大条数
SSH_CLIENT：当前操作环境是用SSH连接的，这里记录客户端ip,客户端端口，主机端口
SSH_TTY：ssh连接的终端时pts/1
USER:当前登录的用户

++++++++---------------位置参数-----------------+++++++
++++++++---------------位置参数-----------------+++++++
$n:n为数字,$0代表命令本身,$1-$9表示第一到第九个参数,用于向脚本传递参数
$#表示参数个数
$*把所有参数看成一个值(整体)
$@把每个参数分开来看

++++++++---------------预定义变量-----------------+++++++
++++++++---------------预定义变量-----------------+++++++
$?上次执行命令成功与否，执行成功返回0，否则返回非0(出错情况下的exit x中的x值)
$$当前进程的PID号
$!后台运行进程的PID

read命令:-p "tips:",-t 等待时间秒数, -n接受指定个数字符,一旦输入字符数够了就不再接受输入了,-s隐藏输入数据
换行命令:echo -e "\n"

++++++++---------------shell运算符-----------------+++++++
++++++++---------------shell运算符-----------------+++++++
数组类型：arr[0]=abc,arr[4]=dbd,有点像map，echo ${arr[0]},echo ${arr[*]}
declare -i a：将a声明为整数型
a=11,b=22,c=$a+$b,得到的是c=11+22
declare -i c=$a+$b
declare -x c,把c暂时定义为环境变量
dd=$(expr $a + $b),dd=33,注意+前后的有空格
ff=$(($a+$b)),ff=33,+前后可以有空格
$(命令)执行括号中的命令

++++++++---------------环境变量-----------------+++++++
++++++++---------------环境变量-----------------+++++++
加载配置文件，用于刚跟新过配置文件，但又不想重新登录:source(or .) 配置文件名
/etc/profile:对所有用户其作用
/etc/profile.d/*.sh:对所有用户其作用
/etc/bashrc:对所有用户其作用   
~/.bash_profile:只会对当前用户起作用
~/.bashrc:只会对当前用户起作用

++++++++---------------正则表达式-----------------+++++++
++++++++---------------正则表达式-----------------+++++++
find,搜索路径下的文件，完全匹配
grep,从某个文件中搜索包含给定关键字的行
通配符用来匹配文件名，可以和ls、find、cp这些命令一起
正则表达式用来进行文件内容中字符匹配，是包含匹配可以和grep、awk、sed一起用

匹配日期：[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}
匹配IP：[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}.[0-9]\{1,3\}

++++++++---------------字符串截取-----------------+++++++
++++++++---------------字符串截取-----------------+++++++
cut,用于提取列，默认分隔符为tab键,若指定用空格分隔，也只会跳过一个空格
grep "/bin/bash" /etc/passwd | cut -f 1,3 -d ":"

printf,%ns输出n个字符,%ni输出n个整数,%m.nf,m位数字，包含n位小数
awk,awk '{printf $2 "\t" $4 "\n"}' a.txt,他将文件中的每一行都做这么一个处理，输出每一行的第2,4列，用print命令可以不用打"\n",使用空格和制表符分隔，且可以跳过任意个空格和制表符
cat /etc/passwd | awk '{FS=":"}{print $1 "\t" $3}',执行过程如下，读取第一行将数据写入$1,$2,$n中，执行动作{}，所以第一行中不会以:分隔，因为在指定分隔符之前，数据就被设置好了，从第二行开始以":"分隔，可改为cat /etc/passwd | awk 'BEGIN{FS=":"}{print $1 "\t" $3}'

cat a.txt | awk '$3>=30{print $2}'

sed命令:
选项：-n:只列出操作的行，如果不加-n则还会将整个文件内容列出
-e：允许多条sed命令
-i：将修改结果写入文件，而不是输出到屏幕
动作：a:追加，c:替换整行，i：插入，p：打印指定行，s：可以指定范围替换,里面有个/g选项，替换所有，否则只替换第一个，d删除

sort:-f忽略大小写，-n以数值型进行排序，-r反向排序，-t指定分隔符，-k
wc：统计行数(-l)、字符(-m)包括看不见的换行以及文件末尾的结束符、单词数(-w)

++++++++---------------解压缩-----------------+++++++
++++++++---------------解压缩-----------------+++++++
zip文件：unzip xxx.zip /// zip -r xxxx.zip dir/
tar.gz:tar zxvf xxxx.tat.gz /// tar zcvf xxxx.tar.gz dir
解压到某目录下：tar zcvf /root/home/xxx.tar.gz dir/将当前目录中dir目录下的所有东西，解压到/root/home下名为xxx.tar.gz
tar.bz2:tar jcvf xxx.tar.bz2 /dir /// tar jxvf xxx.tar.bz2

++++++++---------------快捷键-----------------+++++++
++++++++---------------快捷键-----------------+++++++
Ctrl + A:到行首
Ctrl + E:到行尾
Ctrl + U:清除已经输入的所有
Ctrl + L:清屏
Ctrl + R:寻找历史命令

++++++++---------------用户用户组-----------------+++++++
++++++++---------------用户用户组-----------------+++++++
有关配置文件：root用户的组号位0，1-499号給安装的服务
/etc/group
/etc/gshadow
/etc/shadow
/etc/passwd

添加用户组:groupadd group_name
修改用户组名字:groupmod -n new_name old_name
修改用户组编号:groupmod -g 668 group_name
创建用户组的同时设置组编号:groupadd -g 888 group_name
删除用户组:groupdel group_name

往用户组里添加用户:useradd -g group_name user_name
创建用户的时候指定用户家目录:useradd -d /home/xxx xxx
更改用户的用户名:usermod -l new_name old_name
修改用户密码：passwd user_name

修改用户所属用户组:usermod -g group_name user_name
删除用户:userdel user_name同时删除其家目录:userdel -r user_name

touch /etc/nologin:禁止除root用户以外的用户登录
passwd -l user_name:冻结某个账户
passwd -u user_name:解冻某个账户
passwd -d user_name:让某用户无密码登录

主要组和附属组:
gpasswd -a user_name 附属组名字
usermod -g group_name user_name 修改用户的主要组
用户创建的文件默认属于主要组
组切换:newgrp group_name,需要输入组密码
从附属组中删除用户:gpasswd -d user_name 附属组名字
添加用户同时指定主要组和附属组:useradd -g 主要组 -G 附属组1,附属组2
修改组密码:gpasswd 组名称

su username:需要目标用户的密码
groups user_name:显示用户所在组

++++++++---------------进程-----------------+++++++
++++++++---------------进程-----------------+++++++
查看命令：ps aux
杀掉进程：kill pid_num
如果当前终端已经死掉，那么利用Ctrl + Alt + F1-6从另外一个终端进入杀掉进程

++++++++---------------查找-----------------+++++++
++++++++---------------查找-----------------+++++++
locate:从数据库中查找文件，新创建的文件找不到，利用命令:sudo updatedb
find从目标目录搜索

软件安装：1.对于编译好的源码，只要下载，解压就可以直接使用，要想在任何地方都能使用，可以创建一个硬链接ls -s ~/.sublime/sublime_text ~/bin/subl
2.自己下载源码，编译链接，步骤如下：解压进入目录，执行./configure,make,sudo make install,搞定！
3.deb包:下载好deb包后执行sudo dpkg -i xxxxx.deb
dpkg -l列出所有安装的deb包
dpkg -L 包名,列出这个包安装了哪些文件
dpkg -S 文件名，列出该文件属于哪个包

4.apt-get:
sudo apt-get install git
sudo apt-get purge git(删除软件，包括配置文件)
sudo apt-get remove git

++++++++---------------常用端口号-----------------+++++++
++++++++---------------常用端口号-----------------+++++++
FTP(文件传输):20 21 
SSH(安全shell协议):22
TELNET(远程登录协议):23
DNS(域名系统):53
HTTP(超文本传输协议):80
SMTP(简单邮件传输协议):25(发信)
POP3(邮局协议3代):110(收信)
netstat -an

++++++++---------------IP地址配置-----------------+++++++
++++++++---------------IP地址配置-----------------+++++++
1.ifconfig命令临时配置IP地址
ifconfig eth0 192.168.0.200 netmask 255.255.255.0
service network restart #重启网络
2.setup工具永久配置IP地址
3.修改网络配置文件(标准方式)
配置文件位置因系统而异,ubuntu在/etc/network/interfaces
Redhat:
/etc/sysconfig/network-scripts/ifcfg-eth0
/etc/sysconfig/network
/etc/resolv.conf

DEVICE=eth0		网卡设备名
BOOTPROTE=none(static、dhcp)	是否自动获取IP,能自动获取的前提是局域网内有DHCP服务器
HWADDR=00:0c:24:12:3c:g   MAC地址
NM_CONTROLLED=yes	是否可以由Network Manager图形管理工具托管
ONBOOT=yes		是否随网络服务启动，eth0生效
TYPE=Ethernet	类型为以太网
UUID="XXXXXXX"	唯一识别码
IPADDR=192.168.0.244	IP地址
NETMASK=255.255.255.0   子网掩码
GATEWAY=192.168.0.1   	网关
DNS1=202.103.0.20       DNS
IPV6INIT=no             IPv6没有启用

虚拟机网络配置
1.通过上面的步骤配置IP,umask
2.启动网卡/etc/sysconfig/network-scripts/ifcfg-eth0  ONBOOT=no改为ONBOOT=yes
3.重启网络服务:service network restart
4.修改UUID(虚拟机是通过clone过来的):1.在/etc/sysconfig/network-scripts/ifcfg-eth0下删除mac行，2.rm -rf /etc/udev/rules.d/70-persistent-net.rules删除网卡和MAC地址绑定文件，3.重启系统

虚拟机中网络配置选项中:
桥接:使用真实机的网卡上网，占用局域网中的一个IP地址，此时的虚拟机相当于该局域网中的一台真实机器
NAT:使用虚拟网卡，能与真实主机通信，也能连接外网
HOSTONLY:只能和真实主机通信

网络命令：
ifdown eth0, 禁用网卡
ifup eth0, 启用网卡

netstat:-t(列出TCP协议端口)，-u(列出UDP协议端口),-n(不使用域名与服务，而使用IP地址和端口号显示),-l(列出在监听状态的服务),-a(列出所有的网络连接)
netstat -rn:查看网关
nslookup server:查看本机DNS

(ICMP) ping IP -c 4指定ping4次
(明文,用于端口探测)telnet IP PORT，测试对方IP是否开启某个端口
(ICMP)traceroute IP(域名)
wget http://soft.vpser.net/xxx.tar.gz下载命令

tcpdump -i(指定网卡eth0) eth0 -nnX(将数据包中的域名转为IP和端口,X以16进制显示) port(指定端口) 21

ssh user_name@ip
scp [-r目录] user_name@ip:文件路径 本地文件	下载
scp [-r目录] 本地文件 user_name@ip:文件路径  上传
